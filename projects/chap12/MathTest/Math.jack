// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
 
class Math {
	
	static Array twoToThe;
	
    /** Initializes the library. */
    function void init() {
    	let twoToThe = Array.new(15);
    	let twoToThe[0] = 1;
    	let twoToThe[1] = 2;
    	let twoToThe[2] = 4;
    	let twoToThe[3] = 8;
    	let twoToThe[4] = 16;
    	let twoToThe[5] = 32;
    	let twoToThe[6] = 64;
    	let twoToThe[7] = 128;
    	let twoToThe[8] = 256;
    	let twoToThe[9] = 512;
    	let twoToThe[10] = 1024;
    	let twoToThe[11] = 2048;
    	let twoToThe[12] = 4096;
    	let twoToThe[13] = 8192;
    	let twoToThe[14] = 16384;
    	
    	return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
    	if (x<0) {
    		return -x;
    	} else {
    		return x;
    	}
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
  		var int sum, shiftedX, j;
		
		if ((x<0)&(y>0)) { return -Math.multiply(-x, y); }
		if ((x>0)&(y<0)) { return -Math.multiply(x, -y); }

    	let sum = 0;
    	let shiftedX = x;
    	let j = 0;
    	
    	while (j<15) { // for j = 0...(n-1)
    		if (Math.bit(y, j) = 1) {
    			let sum = sum+shiftedX;
    		}
    		let shiftedX = shiftedX+shiftedX;
    		let j = j+1;
    	}
    	
    	return sum;
    }
	
	/** returns true if the j-th bit of the integer x is 1 else false */
	function int bit(int num, int j) {
		if ((num&twoToThe[j])>0) { return 1; }
		else { return 0; }
	}
	
    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
        var int q;
      	
      	if ((x<0) & (y<0)) { return Math.divide(-x, -y); }
    	if ((x<0) & (y>0)) { return -Math.divide(-x, y); }
    	if ((x>0) & (y<0)) { return -Math.divide(x, -y); }
    	
    	if (y>x) {
    		return 0;
    	}
    	let q = Math.divide(x, y+y);
    	if ((x-((q+q)*y))<y) {
    		return q+q;
    	} else {
    		return q+q+1;
    	}
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
    	var int y, j, w, w2;
    	let y = 0;
    	let j = 7; // n/2-1
    	
    	while (j>(-1)) {
    		let w = y+twoToThe[j];
    		let w2 = w*w;

    		if (((w2=x)|(w2<x))&(w2>0)) {
    			let y = y+twoToThe[j];	
    		}
    		let j = j-1;
    	}
    	return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
    	if (a>b) {
    		return a;
    	} else {
    		return b;
    	}
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
    	if (a<b) {
    		return a;
    	} else {
    		return b;
    	}
    }
}
