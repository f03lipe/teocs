function Screen.init 0
push constant 1
pop static 0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
push constant 256
call Math.multiply 2
push constant 1
add
lt
not
if-goto WHILE_END0
push constant 16384
push local 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop static 0
goto IF_END0
label IF_FALSE0
push constant 0
pop static 0
label IF_END0
push constant 0
return
function Screen.modulo 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function Screen.pow 2
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 1
push argument 0
call Math.multiply 2
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Screen.drawPixel 3
push constant 16384
push constant 32
push argument 1
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 1
push local 1
call Memory.peek 1
pop local 2
push constant 2
push argument 0
push constant 16
call Screen.modulo 2
call Screen.pow 2
pop local 0
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
push local 0
or
call Memory.poke 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 1
push local 2
push local 0
not
and
call Memory.poke 2
pop temp 0
label IF_END0
push constant 0
return
function Screen._draw_straight_y 2
push argument 1
push argument 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 1
push argument 2
pop argument 1
push local 1
pop argument 2
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 2
push argument 1
sub
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 1
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen._draw_straight_x 2
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop local 1
push argument 1
pop argument 0
push local 1
pop argument 1
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push argument 0
push local 0
add
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
add
push argument 2
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen._draw_line 4
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push constant 1
pop local 3
push argument 2
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop local 3
push argument 2
neg
pop argument 2
label IF_FALSE0
label WHILE_EXP0
push local 0
call Math.abs 1
push argument 2
call Math.abs 1
lt
push local 0
call Math.abs 1
push argument 2
call Math.abs 1
eq
or
push local 1
push argument 3
lt
push local 1
push argument 3
eq
or
and
not
if-goto WHILE_END0
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 3
push constant 1
call Math.multiply 2
add
pop local 0
push local 2
push argument 3
add
pop local 2
goto IF_END1
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
push local 2
push argument 2
sub
pop local 2
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLine 2
push argument 0
push argument 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 3
call Screen._draw_straight_y 3
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push argument 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 2
push argument 1
call Screen._draw_straight_x 3
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 1
push argument 3
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
pop local 0
push argument 1
pop local 1
push argument 2
pop argument 0
push argument 3
pop argument 1
push local 0
pop argument 2
push local 1
pop argument 3
label IF_FALSE2
push argument 0
push argument 1
push argument 2
push argument 0
sub
push argument 3
push argument 1
sub
call Screen._draw_line 4
pop temp 0
push constant 0
return
function Screen.drawRawRectangle 0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 2
push argument 1
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 3
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Screen.drawRectangle 2
push argument 3
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 1
push argument 1
pop argument 3
push local 1
pop argument 1
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 3
push argument 1
sub
lt
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 1
push local 0
add
call Screen._draw_straight_x 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 4
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 3
push argument 0
push local 3
sub
pop local 1
push argument 0
push local 3
add
pop local 2
push local 1
push local 2
push argument 1
push local 0
add
call Screen._draw_straight_x 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
