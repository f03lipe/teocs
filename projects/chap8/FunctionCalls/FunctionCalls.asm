@256
D=A
@SP
M=D

// call Sys.init 0
@Sys.init._return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+0
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init._return)

(toDTrue)
	D=-1
	@R15
	A=M
	0;JMP

(toDFalse)
	D=0
	@R15
	A=M
	0;JMP

// current class: MainBUG

// function Main.add42 1
(Main.add42)
@1
D=A
@R13
M=D
(Main.add42._func_storage_start)
@Main.add42._func_storage_end
D;JLE
@SP
M=M+1
D=D-1
@SP
A=M
M=0
@Main.add42._func_storage_start
0;JMP
(Main.add42._func_storage_end)
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0

// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1

// gt
@SP
M=M-1
@SP
A=M
D=M
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R14
M=D
@R14
D=M
@R13
D=D-M
@R13
M=D
@Main.add42.goto0
D=A
@R15
M=D

@R13
D=M
@toDTrue
D;JGT
@toDFalse
0;JMP
(Main.add42.goto0)
@SP
A=M
M=D
@SP
M=M+1

// if-goto ENDIT
@SP
M=M-1
A=M
D=M
@Main.add42$ENDIT
D;JNE

// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1

// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// add
@SP
M=M-1
@SP
A=M
D=M
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R14
M=D
@R14
D=M
@R13
D=D+M
@SP
A=M
M=D
@SP
M=M+1

// call Main.add42 1
@Main.add42._return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+0
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.add42
0;JMP
(Main.add42._return)

// pop local 0
@SP
M=M-1
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D

// return
@LCL
D=M
@R5
M=D
@R5
D=M
@5
D=D-A
A=D
D=M
@R6
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R5
D=M
@1
A=D-A
D=M
M=1
@THAT
M=D
@R4
D=M
@2
A=D-A
D=M
M=1
@THIS
M=D
@R5
D=M
@3
A=D-A
D=M
M=1
@ARG
M=D
@R5
D=M
@4
A=D-A
D=M
M=1
@LCL
M=D
@R6
A=M
0;JMP

// label ENDIT
(Main.add42$ENDIT)

// push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// pop local 0
@SP
M=M-1
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D

// return
@LCL
D=M
@R5
M=D
@R5
D=M
@5
D=D-A
A=D
D=M
@R6
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R5
D=M
@1
A=D-A
D=M
M=1
@THAT
M=D
@R4
D=M
@2
A=D-A
D=M
M=1
@THIS
M=D
@R5
D=M
@3
A=D-A
D=M
M=1
@ARG
M=D
@R5
D=M
@4
A=D-A
D=M
M=1
@LCL
M=D
@R6
A=M
0;JMP

// current class: Sys

// function Sys.init 0
(Sys.init)
@0
D=A
@R13
M=D
(Sys.init._func_storage_start)
@Sys.init._func_storage_end
D;JLE
@SP
M=M+1
D=D-1
@SP
A=M
M=0
@Sys.init._func_storage_start
0;JMP
(Sys.init._func_storage_end)
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0
@0

// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

// call Main.add42 1
@Main.add42._return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+0
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.add42
0;JMP
(Main.add42._return)

// label WHILE
(Sys.init$WHILE)

// goto WHILE
@Sys.init$WHILE
0;JMP

// return
@LCL
D=M
@R5
M=D
@R5
D=M
@5
D=D-A
A=D
D=M
@R6
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R5
D=M
@1
A=D-A
D=M
M=1
@THAT
M=D
@R4
D=M
@2
A=D-A
D=M
M=1
@THIS
M=D
@R5
D=M
@3
A=D-A
D=M
M=1
@ARG
M=D
@R5
D=M
@4
A=D-A
D=M
M=1
@LCL
M=D
@R6
A=M
0;JMP

